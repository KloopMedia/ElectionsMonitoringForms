{"version":3,"sources":["util/Firebase.js","util/Auth.js","Components/form/textInput.js","Components/form/selectBox.js","Components/form/radiobutton.js","Components/form/timePickers.js","Components/form/radioHorizontal.js","Components/Template.js","Components/FileUploader.js","Components/auth/Home.js","Components/auth/Login.js","Components/auth/SignUp.js","util/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","onAuthStateChanged","user","firestore","collection","doc","uid","set","name","displayName","role","Provider","value","useStyles","makeStyles","theme","root","width","BasicTextFields","props","classes","setValue","index","response","noValidate","autoComplete","title","TextField","className","id","label","onChange","event","target","returnAnswer","disabled","locked","formControl","minWidth","SelectBox","open","setOpen","FormControl","InputLabel","Select","labelId","onClose","onOpen","answers","indexOf","MenuItem","map","el","i","key","RadioButton","const","RadioGroup","aria-label","FormControlLabel","control","Radio","container","display","flexWrap","textField","marginLeft","spacing","marginRight","TimePickers","type","InputLabelProps","shrink","InputProps","disableUnderline","RadioHorizontal","idx","setIdx","tmp","idTmp","handleChange","onClick","subquestion","question","component","row","color","labelPlacement","style","paddingLeft","paddingRight","queryString","require","Template","state","questions","main_title","gateway","shortAnswers","showAnswers","period","files","showFileUpload","downloadData","urlString","parse","window","location","search","decode","url","fetch","then","json","data","setState","initResponse","timeManager","console","log","uploadData","context","add","form_name","form_url","date","Date","catch","error","alert","err","now","start","finish","before","nofill","in","after","decodedResponse","decodeURI","JSON","Object","entries","keys","nestedKey","nestedValue","answer","idArr","this","questionList","r","to","paddingTop","paddingBottom","textAlign","stringify","Component","contextType","withRouter","FileUploader","loadAttachmentQuestions","orderBy","limit","get","querySnapshot","forEach","exists","uploadFiles","storageRef","storage","ref","child","Array","from","file","put","snapshot","getDownloadURL","filepath","answer_number","answer_id","attachMaterials","multiple","e","toString","Home","forms","setForms","setHome","app","signOut","path","exact","history","useContext","useCallback","a","preventDefault","elements","email","password","createUserWithEmailAndPassword","push","PrivateRoute","RouteComponent","rest","render","routeProps","App","Login","SignUp","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a2a09d13.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCCAhvWFvwuxDUXZ4aV-FhB_Dj-lp_frCw\",\r\n    authDomain: \"electionsmonitor-5d008.firebaseapp.com\",\r\n    databaseURL: \"https://electionsmonitor-5d008.firebaseio.com\",\r\n    projectId: \"electionsmonitor-5d008\",\r\n    storageBucket: \"electionsmonitor-5d008.appspot.com\",\r\n    messagingSenderId: \"145410178875\",\r\n    appId: \"1:145410178875:web:6cf434df68d3c65062811e\",\r\n    measurementId: \"G-EXC8T9QXES\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  export const signInWithGoogle = () => {\r\n    firebase.auth().signInWithPopup(provider);\r\n  };\r\n\r\nexport default firebase;","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"./Firebase.js\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n      setPending(false)\r\n      let rootRef = firebase.firestore().collection(\"users\")\r\n      let userRef = rootRef.doc(user.uid)\r\n      userRef.set(\r\n        {\r\n          name: user.displayName,\r\n          role: 'independent'\r\n        }\r\n      )\r\n    });\r\n  }, []);\r\n\r\n  if(pending){\r\n    return <>Loading...</>\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t'& > *': {\r\n\t\t\twidth: '40ch',\r\n\t\t},\r\n\t},\r\n\r\n}));\r\n\r\n\r\nfunction BasicTextFields(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, event.target.value)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form noValidate autoComplete=\"off\">\r\n\t\t\t\t<h4>{props.title}</h4>\r\n\t\t\t\t<TextField \r\n\t\t\t\t\tclassName={classes.root}\r\n\t\t\t\t\tid={\"inputBox\" + index}\r\n\t\t\t\t\tlabel=\"Мой ответ\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tdisabled={props.locked ? true : false}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BasicTextFields","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tminWidth: 120,\r\n\t},\r\n}));\r\n\r\nexport default function SelectBox(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value);\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, id)\r\n\t};\r\n\r\n\tconst handleClose = (event) => {\r\n\t\tsetOpen(false)\r\n\t};\r\n\r\n\tconst handleOpen = (event) => {\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<FormControl className={classes.formControl} disabled={props.locked ? true : false}>\r\n\t\t\t\t<InputLabel id=\"controlled-open-select-label\">Выбрать</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"controlled-open-select-label\"\r\n\t\t\t\t\tid={\"select\" + index}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\tonOpen={handleOpen}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}>\r\n\t\t\t\t\t<MenuItem value={\"\"}><em>None</em></MenuItem>\r\n\t\t\t\t\t{props.answers.map((el, i) => <MenuItem key={i} value={el}>{el}</MenuItem>)}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nexport default function RadioButton(props) {\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, id)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<FormControl const='fieldset'>\r\n\t\t\t\t<RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\r\n\t\t\t\t\t{props.answers.map((el, i) => <FormControlLabel \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio/>} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={props.locked ? true : false} />)}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\t\t;\r\n}","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\twidth: 'auto',\r\n\t},\r\n}));\r\n\r\nexport default function TimePickers(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [index, response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, event.target.value)\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<form className={classes.container} noValidate>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid={\"time\" + index}\r\n\t\t\t\t\tlabel=\"Время\"\r\n\t\t\t\t\ttype=\"time\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tInputProps={{disableUnderline: true}}\r\n\t\t\t\t\tdisabled={props.locked ? true : false}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport '../../App.css'\r\n\r\nexport default function RadioHorizontal(props) {\r\n\tconst [value, setValue] = useState({});\r\n\tconst [idx, setIdx] = useState({});\r\n\tlet tmp = {}\r\n\tlet idTmp = {}\r\n\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = id => event => {\r\n\t\ttmp = {...value}\r\n\t\ttmp[id] = event.target.value\r\n\t\tsetValue(tmp)\r\n\r\n\t\tidTmp ={...idx}\r\n\t\tlet i = props.answers.indexOf(event.target.value)\r\n\t\tidTmp[id] = i\r\n\t\tsetIdx(idTmp)\r\n\r\n\t\tprops.returnAnswer(tmp, index, idTmp)\r\n\t};\r\n\r\n\tconst handleClear = () => {\r\n\t\tsetValue({})\r\n\t\tprops.returnAnswer({}, index)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"radioHorizontal\">\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<button onClick={handleClear}>clear</button>\r\n\t\t\t<div className=\"question_item\">\r\n\t\t\t\t{props.subquestion.map((question, id) =>\r\n\t\t\t\t\t<div className=\"question_item_\" key={id}>\r\n\t\t\t\t\t\t<p>{question}</p>\r\n\t\t\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t\t\t<RadioGroup aria-label=\"position\" name=\"position\" row value={value[id] ? value[id] : \"\"}\r\n\t\t\t\t\t\t\t            onClick={handleChange(id)}>\r\n\t\t\t\t\t\t\t\t{props.answers.map((el, i) =>\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tvalue={el}\r\n\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\"/>}\r\n\t\t\t\t\t\t\t\t\t\tlabel={id > 0 ? \"\" : el}\r\n\t\t\t\t\t\t\t\t\t\tlabelPlacement=\"top\"\r\n\t\t\t\t\t\t\t\t\t\tdisabled={props.locked ? true : false}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{paddingLeft: 5, paddingRight: 5}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n","import React, {Component, useContext} from 'react';\r\nimport firebase from '../util/Firebase';\r\nimport \"../App.css\"\r\nimport { AuthContext } from \"../util/Auth\";\r\n\r\nimport TextInput from \"./form/textInput\";\r\nimport SelectBox from \"./form/selectBox\";\r\nimport RadioButton from \"./form/radiobutton\";\r\nimport TimePickers from \"./form/timePickers\";\r\nimport RadioHorizontal from \"./form/radioHorizontal\";\r\nimport { Link, BrowserRouter as Router, withRouter, Redirect } from 'react-router-dom';\r\n\r\nconst queryString = require('query-string');\r\n\r\nclass Template extends Component {\r\n    state = {\r\n      questions: [],\r\n      main_title: '',\r\n      gateway: '',\r\n      answers: {},\r\n      shortAnswers: {},\r\n      showAnswers: false,\r\n      response: {},\r\n      period: null,\r\n      locked: false,\r\n      files: [],\r\n      showFileUpload: false\r\n    }\r\n\r\n    static contextType = AuthContext\r\n  \r\n    componentDidMount() {\r\n        this.downloadData()\r\n    }\r\n\r\n    downloadData = () => {\r\n        let urlString = queryString.parse(window.location.search, {decode: false})\r\n        if (this.props.url) {\r\n            fetch(this.props.url)\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then((data) => {\r\n                    this.setState({\r\n                        questions: data.questions,\r\n                        main_title: data.main_title,\r\n                        gateway: data.gateway,\r\n                        period: data.period\r\n                    })\r\n                    if (urlString.response) {\r\n                      this.initResponse(data, urlString)\r\n                    }\r\n                    if (data.period) {\r\n                      this.timeManager(data)\r\n                    }\r\n                });\r\n        } else {\r\n            console.log(\"ERROR: no url detected\")\r\n        }\r\n    }\r\n  \r\n    uploadData = () => {\r\n      try {\r\n        let rootRef = firebase.firestore().collection(\"responses\")\r\n        let userRef = rootRef.doc(this.context.currentUser.uid)\r\n        let answersRef = userRef.collection(\"answers\")\r\n        answersRef.add(\r\n          {\r\n            answers: this.state.answers,\r\n            form_name: this.state.main_title,\r\n            form_url: this.props.url,\r\n            date: new Date()\r\n          }\r\n        ).catch(error => alert(error))\r\n        \r\n        console.log(\"data uploaded\")\r\n        this.setState({showAnswers: true})\r\n        this.setState({showFileUpload: true})\r\n      }\r\n      catch (err) {\r\n        alert(err)\r\n        this.setState({showAnswers: true})\r\n      }\r\n    }\r\n\r\n    timeManager = (data) => {\r\n      let now = new Date();\r\n      let start = new Date(data.period.start);\r\n      let finish = new Date(data.period.finish)\r\n\r\n      if (start > now && data.period.before.nofill) {\r\n        this.setState({locked: true})\r\n      }\r\n      else if (start < now && now < finish && data.period.in.nofill) {\r\n        this.setState({locked: true})\r\n      }\r\n      else if (now > finish && data.period.after.nofill) {\r\n        this.setState({locked: true})\r\n      }\r\n      else {\r\n        this.setState({locked: false})\r\n      }\r\n      console.log(\"LOCKED \", this.state.locked)\r\n    }\r\n\r\n    initResponse = (data, urlString) => {\r\n      let decodedResponse = decodeURI(urlString.response)\r\n      let response = JSON.parse(decodedResponse)\r\n      this.setState({response: response})\r\n      for (const [key, value] of Object.entries(response)) {\r\n        let id = null\r\n        if (key === Object.keys(response)[0]) {\r\n          this.returnAnswer(value, key)\r\n        }\r\n        if (data.questions[key].type === 'input') {\r\n          this.returnAnswer(value, key)\r\n        }\r\n        else if (data.questions[key].type === 'time') {\r\n          this.returnAnswer(value, key, value)\r\n        }\r\n        else if (data.questions[key].type === 'multiradio') {\r\n          for (const [nestedKey, nestedValue] of Object.entries(value)) {\r\n            let id = data.questions[key].answer.indexOf(nestedValue)\r\n            let idArr = {...this.state.shortAnswers[key]}\r\n            idArr[nestedKey] = id\r\n            this.returnAnswer(value, key, idArr)\r\n          }\r\n        }\r\n        else {\r\n          id = data.questions[key].answer.indexOf(value)\r\n          this.returnAnswer(value, key, id)\r\n        }\r\n      }\r\n    }\r\n  \r\n    returnAnswer = (answer, index, id = null) => {\r\n      let answers = {...this.state.answers}\r\n      answers[index] = answer\r\n      this.setState({answers: answers})\r\n\r\n      let shortAnswers = {...this.state.shortAnswers}\r\n      shortAnswers[index] = id\r\n      this.setState({shortAnswers: shortAnswers})\r\n    }\r\n    \r\n  \r\n    render () {\r\n      let questionList = this.state.questions.map((el, i) => {\r\n        const r = this.state.response\r\n\r\n        if (el.type === 'input') {\r\n          return <TextInput key={i} index={i} title={el.title} response={r[i]} returnAnswer={this.returnAnswer} locked={this.state.locked} />\r\n        }\r\n        else if (el.type === 'select') {\r\n          return <SelectBox key={i} index={i} title={el.title} response={r[i]} answers={el.answer} returnAnswer={this.returnAnswer} locked={this.state.locked} />\r\n        }\r\n        else if (el.type === 'radio') {\r\n          return <RadioButton key={i} index={i} title={el.title} response={r[i]} answers={el.answer} returnAnswer={this.returnAnswer} locked={this.state.locked} />\r\n        }\r\n        else if (el.type === 'time') {\r\n          return <TimePickers key={i} index={i} title={el.title} response={r[i]} returnAnswer={this.returnAnswer} locked={this.state.locked} />\r\n        }\r\n        else if (el.type === 'multiradio') {\r\n          return <RadioHorizontal key={i} index={i} title={el.title} response={r[i]} subquestion={el.subquestion} answers={el.answer} returnAnswer={this.returnAnswer} locked={this.state.locked} />\r\n        }\r\n        else {\r\n          return null\r\n        }\r\n      })\r\n  \r\n      return (\r\n        <div>\r\n          <h1 className=\"text-align-center\">{this.state.main_title}</h1>\r\n          {this.state.showFileUpload ? <Redirect to={\"/ElectionsMonitoringForms/files\"} /> : null}\r\n          <div>\r\n            {questionList}\r\n            <div style={{paddingTop: 20, paddingBottom: 20, textAlign: \"center\"}}>\r\n              <button disabled={this.state.locked ? true : false} onClick={this.uploadData}>Send data</button>\r\n            </div>\r\n          </div>\r\n          {this.state.showAnswers ? <p style={{textAlign: \"left\"}}>Full answers: {JSON.stringify(this.state.answers)}</p> : null}\r\n          {this.state.showAnswers ? <p style={{textAlign: \"left\"}}>Short answers: {JSON.stringify(this.state.shortAnswers)}</p> : null}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default withRouter(Template)","import React, {Component, useContext} from 'react';\r\nimport firebase from '../util/Firebase';\r\nimport \"../App.css\"\r\nimport { AuthContext } from \"../util/Auth\";\r\n\r\nconst queryString = require('query-string');\r\n\r\nclass FileUploader extends Component {\r\n    state = {\r\n      questions: [],\r\n      main_title: '',\r\n      answers: {},\r\n      id: \"\",\r\n      showAnswers: false,\r\n      period: null,\r\n      locked: false,\r\n      showFileUpload: false\r\n    }\r\n\r\n    static contextType = AuthContext\r\n  \r\n    componentDidMount() {\r\n      this.loadAttachmentQuestions()\r\n    }\r\n\r\n    downloadData = (url) => {\r\n        let urlString = queryString.parse(window.location.search, {decode: false})\r\n        if (url) {\r\n          console.log(urlString)\r\n            fetch(url)\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then((data) => {\r\n                    console.log(data)\r\n                    this.setState({\r\n                        questions: data.questions,\r\n                        main_title: data.main_title,\r\n                        period: data.period\r\n                    })\r\n                    if (data.period) {\r\n                      this.timeManager(data)\r\n                    }\r\n                });\r\n        } else {\r\n            console.log(\"ERROR: no url detected\")\r\n        }\r\n    }\r\n\r\n    loadAttachmentQuestions = () => {\r\n      let rootRef = firebase.firestore().collection('responses')\r\n      let userRef = rootRef.doc(this.context.currentUser.uid)\r\n      let answersRef = userRef.collection(\"answers\")\r\n      answersRef.orderBy(\"date\", \"desc\").limit(1).get().then(querySnapshot => {\r\n        querySnapshot.forEach(doc => {\r\n          console.log(doc.id, \" => \", doc.data());\r\n          if (doc && doc.exists) {\r\n            this.setState({answers: doc.data()})\r\n            this.setState({id: doc.id})\r\n            this.downloadData(doc.data().form_url)\r\n          }\r\n        });\r\n      })\r\n      this.setState({showFileUpload: true})\r\n    }\r\n\r\n    uploadFiles = (event, index) => {\r\n      const storageRef = firebase.storage().ref().child(this.context.currentUser.uid);\r\n\r\n      const files = event.target.files\r\n      Array.from(files).forEach(file => {\r\n        const fileRef = storageRef.child(file.name)\r\n        const task = fileRef.put(file)\r\n        task\r\n        .then(snapshot => snapshot.ref.getDownloadURL())\r\n        .then((url) => {\r\n          let rootRef = firebase.firestore().collection(\"responses\")\r\n          let userRef = rootRef.doc(this.context.currentUser.uid)\r\n          let filesRef = userRef.collection(\"files\")\r\n          filesRef.add(\r\n            {\r\n              filepath: url,\r\n              answer_number: index,\r\n              answer_id: this.state.id\r\n            }\r\n          ).catch(error => alert(error))\r\n        })\r\n        .catch(console.error);\r\n      })\r\n    }\r\n\r\n    timeManager = (data) => {\r\n      let now = new Date();\r\n      let start = new Date(data.period.start);\r\n      let finish = new Date(data.period.finish)\r\n\r\n      if (start > now && data.period.before.nofill) {\r\n        this.setState({locked: true})\r\n      }\r\n      else if (start < now && now < finish && data.period.in.nofill) {\r\n        this.setState({locked: true})\r\n      }\r\n      else if (now > finish && data.period.after.nofill) {\r\n        this.setState({locked: true})\r\n      }\r\n      else {\r\n        this.setState({locked: false})\r\n      }\r\n      console.log(\"LOCKED \", this.state.locked)\r\n    }\r\n    \r\n  \r\n    render () {\r\n      return (\r\n        <div>\r\n          <h1 className=\"text-align-center\">{this.state.main_title}</h1>\r\n          {this.state.questions.map((el, index) => {\r\n            return (\r\n              el.attachMaterials ?\r\n              <div key={index}>\r\n                <h5>{el.title}</h5>\r\n                <input disabled={this.state.locked} type=\"file\" name=\"filefield\" multiple=\"multiple\" onChange={(e) => this.uploadFiles(e, index.toString())} />\r\n              </div> : null\r\n          )})}\r\n          {this.state.showAnswers ? <p style={{textAlign: \"left\"}}>Full answers: {JSON.stringify(this.state.answers)}</p> : null}\r\n          {this.state.showAnswers ? <p style={{textAlign: \"left\"}}>Short answers: {JSON.stringify(this.state.shortAnswers)}</p> : null}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default FileUploader","import React, { useEffect, useState } from \"react\";\r\nimport app from \"../../util/Firebase.js\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport Template from './../Template'\r\nimport FileUploader from './../FileUploader'\r\n\r\nconst queryString = require('query-string');\r\n\r\n\r\nconst Home = () => {\r\n  const [forms, setForms] = useState([])\r\n  const [home, setHome] = useState(\"\")\r\n  \r\n  useEffect(() => {\r\n    let urlString = queryString.parse(window.location.search)\r\n    console.log(urlString)\r\n    setHome(urlString.url)\r\n\t\tif (urlString.url) {\r\n\t\t\tfetch(urlString.url)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconsole.log(\"RESPONSE\", response)\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t})\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconsole.log(\"DATA\", data);\r\n          setForms(data)\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR: no url detected\")\r\n\t\t}\r\n  },[])\r\n\r\n  return (\r\n    <>\r\n      <h1>Home</h1>\r\n      <button onClick={() => app.auth().signOut()}>Sign out</button>\r\n      <Router>\r\n          <div>\r\n            <nav>\r\n              <ul>\r\n              <li>\r\n                  <Link to={\"/ElectionsMonitoringForms/\" + window.location.search}>Home</Link>\r\n              </li>\r\n                {forms.map((el, i) => (\r\n                  <li key={i}>\r\n                    <Link to={\"/ElectionsMonitoringForms\" + el.path + window.location.search}>{el.label}</Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </nav>\r\n\r\n            <Switch>\r\n              {forms.map((el, i) => (\r\n                <Route key={i} path={\"/ElectionsMonitoringForms\" + el.path}>\r\n                  {() => <Template url={el.url} path={el.path} />}\r\n                </Route>\r\n                ))}\r\n                <Route exact path=\"/ElectionsMonitoringForms/files\" component={withRouter(FileUploader)} />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useCallback, useContext } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport app, {signInWithGoogle} from \"../../util/Firebase.js\";\r\nimport { AuthContext } from \"../../util/Auth.js\";\r\n\r\nconst Login = ({ history }) => {\r\n  // const handleLogin = useCallback(\r\n  //   async event => {\r\n  //     event.preventDefault();\r\n  //     const { email, password } = event.target.elements;\r\n  //     try {\r\n  //       await app\r\n  //         .auth()\r\n  //         .signInWithEmailAndPassword(email.value, password.value);\r\n  //       history.push(\"/\");\r\n  //     } catch (error) {\r\n  //       alert(error);\r\n  //     }\r\n  //   },\r\n  //   [history]\r\n  // );\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  if (currentUser) {\r\n    return <Redirect to={\"/ElectionsMonitoringForms/\" + window.location.search} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Log in</h1>\r\n      {/* <form onSubmit={handleLogin}>\r\n        <label>\r\n          Email\r\n          <input name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n        </label>\r\n        <label>\r\n          Password\r\n          <input name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n        </label>\r\n        <button type=\"submit\">Log in</button>\r\n      </form> */}\r\n      <button onClick={signInWithGoogle}>Sign-in with Google</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default withRouter(Login);\r\n","import React, { useCallback } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport app, {signInWithGoogle} from \"../../util/Firebase.js\";\r\n\r\nconst SignUp = ({ history }) => {\r\n  const handleSignUp = useCallback(async event => {\r\n    event.preventDefault();\r\n    const { email, password } = event.target.elements;\r\n    try {\r\n      await app\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email.value, password.value);\r\n      history.push(\"/ElectionsMonitoringForms\");\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Sign up</h1>\r\n      {/* <form onSubmit={handleSignUp}>\r\n        <label>\r\n          Email\r\n          <input name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n        </label>\r\n        <label>\r\n          Password\r\n          <input name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n        </label>\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form> */}\r\n      <button onClick={signInWithGoogle}>Sign-in with Google</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SignUp);\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const {currentUser} = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/ElectionsMonitoringForms/login\" + window.location.search} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n\r\nexport default PrivateRoute","import React, {Component} from 'react';\r\nimport \"./App.css\"\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  withRouter \r\n} from \"react-router-dom\";\r\n\r\nimport Home from \"./Components/auth/Home\";\r\nimport Login from \"./Components/auth/Login\";\r\nimport SignUp from \"./Components/auth/SignUp\";\r\nimport { AuthProvider } from \"./util/Auth\";\r\nimport PrivateRoute from \"./util/PrivateRoute\";\r\nimport FileUploader from './Components/FileUploader'\r\n\r\n\r\nclass App extends Component {\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"App\">\r\n      <AuthProvider>\r\n         <Router>\r\n          <div>\r\n            {/* <nav>\r\n              <li>\r\n                  <Link to={\"/?url\" + window.location.search}>Home</Link>\r\n              </li>\r\n            </nav> */}\r\n\r\n              <PrivateRoute exact path={\"/ElectionsMonitoringForms/\"} component={Home} />\r\n              <Route exact path=\"/ElectionsMonitoringForms/login\" component={Login} />\r\n              <Route exact path=\"/ElectionsMonitoringForms/signup\" component={SignUp} />\r\n              <Route exact path=\"/ElectionsMonitoringForms/files\" component={withRouter(FileUploader)} />\r\n          </div>\r\n        </Router>\r\n        </AuthProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}